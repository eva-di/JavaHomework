package lesson_21;

public class Cat {
    // характеристики (состояния) будущих объектов
    String name; // поле класса
    String colour;
    int age;


    /* конструктор класса
    Специальный тип метьода, который автоматически вызывается при создании новогообъекта
    Основная задача конструктора - установить начальные свойства объекта (проинициалиировать)

    Особенности конструктора
    1. Имя конструктора совпадает с именем класса
    2. Конструктор не имеет возвращаемого типа. Даже void не указывается
        (т.к. автоматически возвращает экземпляр класса (объект)
        3. Конструктор вызывается автоматически при создании объекта
     */

    // Перегрузка конструктора

    // Конструктор по умолчанию  - пустой
    public Cat() {
        // все поля получают значения по умолчанию для своего типа данных
    }

    // Конструктор - это метод и я могу передать значения, в тело метода

    public Cat(String catName) {
        name = catName;
    }

    public Cat(String catName, String colour) {
        name = catName;
        this.colour = colour;

        // Проблема перекрытия решается с помощью : Ключевое слово this - используется внутри класса для ссылки на текущий объект
        // оно поможет для разрешения конфликтов имен между полями класса и параметров методов (конструкторов)

    }
// КЛАССИЧЕСКИЙ ВИД КОНСТАРКТОРА

    public Cat(String name, String colour, int age) {
        // this  может быть использовано для вызова других конструкторов
        // или для передачи текущего объекта в качестве параметра метода (разберем позже)
        // System.out.println("Строка перед this()");
        this(name, colour); // вызывает другой конструктор класса
        // Вызов конструктора, принимающего две String и
        // сначала будет выполнен код соответствующего конструктора

           // this.name = name;
           // this.colour = colour;
        this.age = age;

    }

   // поведение будущих объектов
   public void sleep() {
       System.out.println("Я сплю!");

   }

   public void sayMeow() {
       System.out.println("Meow!");

    }

    public void run() {
        System.out.println("Я бегу!");
    }

    public void whoAmI() {
        System.out.printf("Я котик %s, возраст: %d, мой окрас: %s\n", name, age, colour);

    }
}
