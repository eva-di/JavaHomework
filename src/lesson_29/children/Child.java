package lesson_29.children;

 class Child extends Parent {



     String name; //Скопирован из родителя
     int age;

    // Если нет ни одного, то будет добавлен конструктор вида:
//     public Child() {
//         // Вызывается пустой конструктор родителя
//         super();
//     }

     public Child() {
         //  сначала я ДОЛЖЕН создать объект родителя
         // Не могу создать объект ребенка, не создав объект родителя
         // Если я не вызвал конструктор родителя, будет добавлен вызов пустого конструктора родителя
         // Если у родителя нет пустого конструктора, будет гореть красным
         // super(); // джава пытается вызвать родительского конструктора (пустого)
         super("Default"); // должно быть первой строчкой конструктора
         this.age = 20;

         // нужно или вызвать пустой конструктор, или вызвать существующий
         // это никак не звасит от того, сколько у кого полей
         // если есть поля, я наверное захочу поменять конструктор не пустой, а со своими полями и
         // из-за этого придется в ребенке тоже логично будет конструктор, который принимает какое-то имя и возраст

     }
     public Child(String name, int age) {
         super(name); // вызываем конструктор родителя!
         this.name = name;
         this.age = age;
     }

     // Я не могу переопределить final method в наследнике!!!
//     @Override
//     void show() {
//         System.out.println("Another show");
     }

